#!/usr/bin/perl
#
##############################################################################
#
# Author:       Ion CIONCA (Ion.Cionca@epfl.ch) - 2018
#
#########################################################################
#####
#
#

use strict;

use lib '/opt/dinfo/lib/perl';

use CGI;

use Cadi::CadiDB;
use Cadi::WSUtils;

use utf8;
binmode(STDOUT, ":utf8");

my $pi = $ENV {PATH_INFO};

my $config_items = {
		accreddb 		=> { active => '1', critical => 'true', label => 'mysql accred/dinfo db access',},
		payonline		=> { active => '1', critical => 'true', label => 'mysql payonline db access',},
};
my $DEBUG					= -f '/opt/dinfo/etc/MASTER' ? 0 : 1;
 
my $query = new CGI;
my %args;
my @params = $query->param;
foreach my $item (@params) {
	if ($item eq 'metrics') {
		$args{$item} = 1;
	}
} 

my $probe ;
$probe->{status} = 'ok';
	
if ( $pi =~ /usage/ ) {
	my $return = {  
		status => 'ok', 
		usage  => qq{https://$ENV{SERVER_NAME}/probe - returns status : ok | ko 
		},
	} ;
	Cadi::WSUtils::json_response ( { probe => $return, } );
	exit;
}	

my $metrics;
my $line = $DEBUG ? 'test' : 'prod';
$line = $ENV {E2EM_LINE} if $ENV {E2EM_LINE};

foreach my $key ( keys %$config_items ) {
	my $item = $config_items->{$key};
	next unless $item->{active};

	$probe->{items}->{$key}->{status} = 'ko';

	if ( $key eq 'payonline' ) {
		my $dbh = new Cadi::CadiDB (
			dbname => 'payonline',
			 trace => 1,
		) ;

		if ( $dbh ) {
			my $sql = qq{SELECT sciper FROM payonline.instances LIMIT 0, 1};
			my $sth = $dbh->prepare( $sql) ;

			if ($sth) {
				$sth->execute () ;
				my $sciper = $sth->fetchrow;
				if ( $sciper ne '' ) {
					$probe->{items}->{$key}->{status} = 'ok';
				} else {
					$probe->{items}->{$key}->{status} = 'ko';
				}
			}
		}
	}
	if ( $key eq 'accreddb' ) {
		my $dbh = new Cadi::CadiDB (
			dbname => 'dinfo',
			 trace => 1,
			utf8 => 1,
		) ;
		if ( $dbh ) {
			my $sql = qq{SELECT sciper FROM dinfo.sciper LIMIT 0, 1};
			my $sth = $dbh->prepare( $sql) ;
			if ($sth) {
				$sth->execute () ;
				my $sciper = $sth->fetchrow;
				if ( $sciper ne '' ) {
					$probe->{items}->{$key}->{status} = 'ok';
				} else {
					$probe->{items}->{$key}->{status} = 'ko';
				}
			}
		}
	}

	$probe->{items}->{$key}->{label} = $item->{label};
	unless ( $probe->{items}->{$key}->{status} eq 'ok' ) {
		$probe->{status} = $item->{critical} ? 'ko' : 'warning';
	}

	my $item_status = $probe->{items}->{$key}->{status} eq 'ok' ? '1' : '0';
	$metrics .= qq{payonline_status{component="$key", critical="$item->{critical}", line="$line"} $item_status\n};

}

print "Status: 200 OK\r\n";
if ( $args{metrics} ) {
	my $probe_status = $probe->{status} eq 'ko' ? '0' : '1';
	print "Content-Type: text\r\n\r\n";
	print qq{# HELP payonline_status payonline service status: 1=OK, 0=KO
# TYPE payonline_status gauge
payonline_status{component="global", line="$line"} $probe_status
$metrics} ;
	exit;
}

if ( $args{verbose} ) {
	Cadi::WSUtils::json_response ( $probe );
} else {
	print "Content-Type: text/html\r\n\r\n";
}

exit;
