#!/usr/bin/perl
#
##############################################################################
#
# File Name:    extract - extractions payonline -> Service Financier EPFL
# Author:       Ion CIONCA (Ion.Cionca@epfl.ch) - 2007
#
#########################################################################
#####
#
#

use strict;
use utf8::all;

use Mail::Sendmail;
use MIME::Lite;
use HTML::Entities ();
use Encode;
use POSIX qw(strftime);

use payonline_tools;

my $mailresp	= 'payonline-ops@groupes.epfl.ch';
my $mailSF		= $ENV{PAYONLINE_MAIL_SF_RECIPIENTS};

my $separator	= ';';
my $tmpfile 	= '/tmp/payonline-utf8.txt';
my $lockfile	= '/tmp/payonline.lock';

###################################################
#	l'extraction est faite pour le jour d'avant
###################################################

my $date =
  ($ARGV[0] && $ARGV[0] =~ m/^(\d{4}-\d{2}-\d{2})$/) ?
  $ARGV[0] :
  strftime("%F", localtime(time - 86000));


log_event "extract_transactions", date => $date, mailSF => $mailSF;

$ENV{REMOTE_ADDR} = 'ignore';	#	bypass web check
payonline_tools::init ();

# ---------- extract and send daily instances to SF
extrans ($date);

exit;

#------
sub extrans {
  my ($date) = @_;
  
  my $sql  			= qq{select * from instances where etat='prod'};
#  my $sql  			= qq{select * from instances where etat='test'};
  my $sth_inst  = payonline_tools::dbquery ($sql);
  return unless $sth_inst;

  open (OUT, ">", $tmpfile) or die "err open payonline tmp : $!";

  my $count = 0;
  
  while (my $inst = $sth_inst->fetchrow_hashref ) {	# - get active instances
     my $descr 	= $inst->{descr};
     my $fonds 	= $inst->{fonds};
        $fonds	=~ s/;/,/g;
     my $ois 		= $inst->{ois};
        $ois		=~ s/;/,/g;
     my $naturecomptable= $inst->{naturecomptable};
        $naturecomptable=~ s/;/,/g;
     my $id			= $inst->{id};
     my $codetva= $inst->{codetva};
     my $sql 		= qq{select * from transact where
									id_inst = '$id' and
									etat LIKE 'pay%' and
									TIMEDIFF(datecr,TIMESTAMP('$date 00:00:00')) >= '00:00:00' and
									TIMEDIFF(TIMESTAMP('$date 23:59:59'),datecr) >= '00:00:00'
									order by datecr
								};
     my $sth 	= payonline_tools::dbquery ($sql);
     next unless $sth;
     
    while (my $result = $sth->fetchrow_hashref) {	# - get transactions for instance
			my $query	= payonline_tools::getArgs ($result->{query});
			my $datecr	= $result->{datecr};
			$datecr	=~ s/\-//g;
			$datecr	=~ s/://g;
			$datecr	=~ s/ //g;
			$datecr	= substr($datecr,0,length($datecr)-2);
			$descr =~ s/\n/ /g;
			$descr =~ s/\r/ /g;
			$descr =~ s/;/,/g;
                        log_event "extrans", descr => $descr, datecr => $datecr;
			my $TVAcode = $codetva ? $codetva : payonline_tools::getTVAcode($naturecomptable);
				 $TVAcode =~ s/A/C/;
				 $TVAcode =~ s/Q7/C7/;
				 
			if ($result->{id_inst} eq $payonline_tools::CAMIPROload) {
				$TVAcode = '';
				$fonds 	 = '';
				$naturecomptable = '201500';
			}

			my $rettxt = "${fonds}${separator}";
			$rettxt	.= "${naturecomptable}${separator}";
			$rettxt	.= "${descr}${separator}";
			$rettxt	.= HTML::Entities::decode($query->{LastName}).${separator};
			$rettxt	.= HTML::Entities::decode($query->{FirstName}).${separator};
			$rettxt	.= HTML::Entities::decode($query->{City}).${separator};
			$rettxt	.= "$query->{Country}${separator}";
			$rettxt	.= "$query->{Total}${separator}";
			$rettxt	.= "$query->{Currency}${separator}";
			$rettxt	.= "$result->{paymode}${separator}";
			$rettxt	.= "$result->{PaymentID}${separator}";
			$rettxt	.= "$datecr${separator}";
			$rettxt	.= "$TVAcode${separator}";
			$rettxt	.= "$result->{id}${separator}";
			$rettxt	.= "$ois";
			
			$rettxt =~ s/&#39;/'/;

			printf OUT "%s\n", $rettxt;
			$count++;
     }

  }
   close OUT;

  system("piconv -f utf8 -t latin1 < /tmp/payonline-utf8.txt > /tmp/payonline.txt");

   return if $payonline_tools::DEBUG;

   if ( $count ) {
	  my $msg = MIME::Lite->new(
		 From    => 'noreply@epfl.ch',
		 Cc	  	 => $mailresp,
		 To      => $mailSF,
		 Subject => "payonline :: paiements du ". payonline_tools::prdate($date),
		 Type    =>'multipart/mixed',
	  );
	  $msg->attach(
			 Type		 => 'text/plain; charset=iso-8859-1',
			 Path		 => "$tmpfile",
			 Filename	 => "payonline.txt",
			 Disposition => 'attachment',
          );
	  $msg->attach(
			 Type		 => 'text/plain; charset=utf-8',
			 Path		 => "$tmpfile",
			 Filename	 => "payonline-utf8.txt",
			 Disposition => 'attachment',
	  );
	  $msg->send('smtp', 'mail.epfl.ch') or die "err send: $!";
          log_event "extrans:sent", mailto => $mailSF, count => $count;

   }

}

#------
sub closeinst {
  my ($date) = @_;
  
  my $sql = qq{select * from instances where DATEDIFF(datefin,TIMESTAMP('$date')) < '00:00:00' and etat <> 'archive'};
  my $sth 	= payonline_tools::dbquery ($sql);
  while (my $result = $sth->fetchrow_hashref) {
   my $resp = Payonline::User->by_sciper($result->{sciper});
   my $txt = qq{Instance no: $result->{id} passe en mode *archive*
Description : $result->{descr}
Responsable : $resp->prenom $resp->nom [sciper: $result->{sciper}, mail:$resp->mail]
Centre financier : $result->{cf}
Fonds : $result->{fonds}
Compte budgétaire : $result->{naturecomptable}
Code TVA : $result->{codetva}
Date début: $result->{datedeb}
Date fin : $result->{datefin}
};

   my $dest = $payonline_tools::DEBUG ? '' : $resp->mail ;
   payonline_tools::send_mail ($dest, 'payonline : fermeture instance de paiement', $txt) ;

   payonline_tools::dbquery (qq{update instances set etat='archive' where id='$result->{id}'});
   log_event "closeinst", descr => $result->{descr}, datefin => $result->{datefin};
  }

}
